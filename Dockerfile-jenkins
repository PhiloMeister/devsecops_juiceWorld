FROM jenkins/jenkins:lts

# Passer en root pour l'installation
USER root

ENV JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
ENV PATH="${JAVA_HOME}/bin:${PATH}"

# Installer Docker et ses dépendances
RUN apt-get update && apt-get install -y \
    python3 \
    python3-dev \
    python3.11-venv \
    python3-pip \
    python3-numpy \
    gdal-bin \
    libgdal-dev \
    docker.io \
    curl \
    tar \
    wget \
    jq \
    bash \
    openjdk-17-jdk-headless \
    nodejs \
    npm \
    && rm -rf /var/lib/apt/lists/*


ENV GDAL_CONFIG=/usr/bin/gdal-config
ENV CPLUS_INCLUDE_PATH=/usr/include/gdal
ENV C_INCLUDE_PATH=/usr/include/gdal

RUN python3 -m venv /opt/venv \
    && /opt/venv/bin/pip install --upgrade pip \
    && /opt/venv/bin/pip install numpy \
    && /opt/venv/bin/pip install GDAL=="$(gdal-config --version)"

# Set the virtual environment as the default Python environment
ENV PATH="/opt/venv/bin:$PATH"

# Verify installation
RUN python --version && pip --version && python -c "import numpy; import osgeo.gdal"

# Vérification : Assurer que Docker est bien installé
RUN docker --version

# Ajouter le groupe Docker et ajouter Jenkins dans ce groupe
ARG DOCKER_GROUP_ID=988
RUN groupmod -g $DOCKER_GROUP_ID docker || groupadd -g $DOCKER_GROUP_ID docker \
    && usermod -aG docker jenkins

# Télécharger et installer Docker Compose
RUN curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose \
    && chmod +x /usr/local/bin/docker-compose \
    && chmod 777 /usr/local/bin/docker-compose \
    && rm -f /usr/bin/docker-compose \
    && ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose \
    && docker-compose --version \
    && chmod 666 /var/run/docker.sock || echo "WARNING: Could not change permissions on /var/run/docker.sock" \
    && newgrp docker || echo "WARNING: Could not execute newgrp docker"

# Désactiver la politique CSP de Jenkins
ENV JAVA_OPTS="-Dhudson.model.DirectoryBrowserSupport.CSP="

RUN jenkins-plugin-cli --plugins \
    workflow-aggregator \
    git \
    blueocean \
    dependency-check-jenkins-plugin \
    docker-workflow
COPY ./juice-shop /juice-shop
#Donne les droits du folder Dependency-check au user jenkins
RUN mkdir -p /srv/dependency-check && \
    chown -R jenkins:jenkins /srv/dependency-check && \
    chmod -R 777 /srv/dependency-check



# Install SonarQube Scanner CLI
RUN wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip && \
    unzip sonar-scanner-cli-5.0.1.3006-linux.zip && \
    mv sonar-scanner-5.0.1.3006-linux /opt/sonar-scanner && \
    ln -s /opt/sonar-scanner/bin/sonar-scanner /usr/local/bin/sonar-scanner && \
    rm sonar-scanner-cli-5.0.1.3006-linux.zip


# Optional: prevent Java detection issues
ENV SONAR_SCANNER_OPTS="-Djava.awt.headless=true"
RUN chown -R jenkins:jenkins /juice-shop && chmod -R 755 /juice-shop

# Revenir à l’utilisateur Jenkins pour l’exécution
USER jenkins

SHELL ["/bin/bash", "-c"]